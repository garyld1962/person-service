service:
  name: person-service

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

custom:
  tableName: 'person-service${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["LambdaPersonTable", "Arn" ] }
  environment:
    PERSON_TABLE: ${self:custom.tableName}

resources:
  Resources:
    LambdaPersonTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: email
            AttributeType: S
        KeySchema:
          -
            AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

functions:
  add-person:
    handler: add-update-person.addupdate
    events:
      - http:
          method: post 
          path: person
  update-person:
    handler: add-update-person.addupdate
    events:
      - http:
          method: put 
          path: person 
  get-person:
    handler: get-person.get
    events:
      - http:
          method: get 
          path: person/{id}
  list-persons:
    handler: list-person.list
    events:
      - http:
          method: get 
          path: persons
  delete-person:
    handler: delete-person.remove
    events:
      - http:
          method: delete 
          path: person/{id}        
         
